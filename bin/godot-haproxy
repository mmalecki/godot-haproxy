#!/usr/bin/env node
var godot = require('godot');
var HAProxyProducer = require('../');
var nconf = require('nconf');
var config;

nconf
  .argv({
    host:   { alias: 'h' },
    port:   { alias: 'p' },
    type:   { alias: 't' },
    // Type was supposed to be here, but `nconf` freaks
    socket: { alias: 's' },
    config: { alias: 'c' }
  });

config = nconf.get('config');
if (config) {
  nconf.file(nconf.get('config'));
}

if (nconf.get('help')) {
  console.log([
    'usage: godot-haproxy [options]\n',
    'options:',
    '  -c, --config  Config file to use (default: config/development.json)',
    '  -h, --host    Godot host',
    '  -p, --port    Godot port',
    '  -t, --type    Godot socket type (tcp or udp)',
    '  -s, --socket  HAProxy stat socket',
    '      --help            You\'re staring at it'
  ].join('\n') + '\n');
  process.exit();
}

var producer = new HAProxyProducer({
  haproxy: nconf.get('socket'),
  ttl: nconf.get('ttl')
});

godot.createClient({
  type: nconf.get('type'),
  producers: [ producer ]
}).connect(nconf.get('port'), nconf.get('host'));
